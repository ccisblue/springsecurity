<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<global-method-security pre-post-annotations="enabled" />
	<!-- 该路径下的资源不用过滤 -->
	<http pattern="/index.jsp" security="none" />
	<http pattern="/login.jsp" security="none" />

	<http auto-config="true" use-expressions="true">
		<custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
	</http>


  <!-- 配置过滤器 -->  
    <beans:bean id="myFilter" class="com.security.MySecurityFilter">  
        <!-- 用户拥有的权限 -->  
        <beans:property name="authenticationManager" ref="myAuthenticationManager" />  
        <!-- 用户是否拥有所请求资源的权限 -->  
        <beans:property name="accessDecisionManager" ref="myAccessDecisionManager" />  
        <!-- 资源与权限对应关系 -->  
        <beans:property name="securityMetadataSource" ref="mySecurityMetadataSource" />  
    </beans:bean> 
     
    <!-- 实现了UserDetailsService的Bean -->  
    <authentication-manager alias="myAuthenticationManager">  
        <authentication-provider user-service-ref="myUserDetailServiceImpl" />
    </authentication-manager>  
    <beans:bean id="myUserDetailServiceImpl" class="com.security.MyUserDetailServiceImpl">  
        <beans:property name="userDao" ref="userDao"></beans:property>
    </beans:bean>  
    <beans:bean id="myAccessDecisionManager" class="com.security.MyAccessDecisionManager"></beans:bean>  
    <beans:bean id="mySecurityMetadataSource" class="com.security.MySecurityMetadataSource">  
        <beans:constructor-arg name="resourceDao" ref="resourceDao"></beans:constructor-arg>  
    </beans:bean>
    
    <beans:bean id="userDao" class="com.dao.UserDao"></beans:bean>
    <beans:bean id="resourceDao" class="com.dao.ResourceDao"></beans:bean>
</beans:beans>  